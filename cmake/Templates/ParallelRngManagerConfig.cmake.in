@PACKAGE_INIT@

#Include targets file.  This will create IMPORTED targets
include("${CMAKE_CURRENT_LIST_DIR}/@EXPORT_TARGETS_NAME@.cmake")
check_required_components("@PROJECT_NAME@")

include(CMakeFindDependencyMacro)
list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})
find_dependency(TRNG)

#Single-library package with eponymous library with static and shared build options
#Sets:
# @PROJECT_NAME@_LIBRARIES (set to SHARED_LIBRAIES if available)
# @PROJECT_NAME@_SHARED_LIBRARIES
# @PROJECT_NAME@_STATIC_LIBRARIES
# @PROJECT_NAME@_BUILD_TYPES

if(@BUILD_SHARED_LIBS@)
    set(@PROJECT_NAME@_SHARED_LIBRARIES @PROJECT_NAME@::@PROJECT_NAME@_SHARED)
else()
    set(@PROJECT_NAME@_SHARED_LIBRARIES)
endif()
if(@BUILD_STATIC_LIBS@)
    set(@PROJECT_NAME@_STATIC_LIBRARIES @PROJECT_NAME@::@PROJECT_NAME@_STATIC)
else()
    set(@PROJECT_NAME@_STATIC_LIBRARIES)
endif()

if(@BUILD_SHARED_LIBS@)
    set(@PROJECT_NAME@_LIBRARIES ${@PROJECT_NAME@_SHARED_LIBRARIES})
    get_property(@PROJECT_NAME@_BUILD_TYPES TARGET @PROJECT_NAME@::@PROJECT_NAME@_SHARED PROPERTY IMPORTED_CONFIGURATIONS)
else()
    set(@PROJECT_NAME@_LIBRARIES ${@PROJECT_NAME@_STATIC_LIBRARIES})
    get_property(@PROJECT_NAME@_BUILD_TYPES TARGET @PROJECT_NAME@::@PROJECT_NAME@_STATIC PROPERTY IMPORTED_CONFIGURATIONS)
endif()

